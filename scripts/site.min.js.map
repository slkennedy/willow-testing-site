{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/site.js"],"names":["header","document","querySelector","open","close","addEventListener","setAttribute","openDialogButton","closeDialogButton","dialog","openComplexDialogButton","closeComplexDialogButton","complexDialog","openModalButton","closeModalButton","closeModalButton2","modal","stylesheetName","themeInputs","stylesheetElement","bodyElement","forEach","theme","dataset","stylesheet","setThemeInSession","matchSessionThemeToRadio","sessionStorage","getItem","checked","startLoading","subpage","undefined","swapTheme","setTimeout","stopLoading","window","onload","setItem","el","href","loading","inputs","sessionStorageTheme","find","input"],"mappings":"AAAA;YCCA,IAAIA,QAASC,SAASC,cAAc,uBAChCC,KAAOF,SAASC,cAAc,qCAC9BE,MAAQH,SAASC,cAAc,qCAEhCC,QACCA,KAAKE,iBAAiB,QAAS,WAAA,MAAML,QAAOM,aAAa,oBAAqB,UAC9EF,MAAMC,iBAAiB,QAAS,WAAA,MAAML,QAAOM,aAAa,oBAAqB,WAKnF,IAAIC,kBAAmBN,SAASC,cAAc,qBAC1CM,kBAAoBP,SAASC,cAAc,sBAC3CO,OAASR,SAASC,cAAc,UAEjCK,oBAECA,iBAAiBF,iBAAiB,QAAS,WAAA,MAAMI,QAAOH,aAAa,oBAAqB,WAG1FE,kBAAkBH,iBAAiB,QAAS,WAAA,MAAMI,QAAOH,aAAa,oBAAqB,UAI/F,IAAII,yBAA0BT,SAASC,cAAc,4BACjDS,yBAA2BV,SAASC,cAAc,6BAClDU,cAAgBX,SAASC,cAAc,iBAExCQ,2BAECA,wBAAwBL,iBAAiB,QAAS,WAAA,MAAMO,eAAcN,aAAa,oBAAqB,WAGxGK,yBAAyBN,iBAAiB,QAAS,WAAA,MAAMO,eAAcN,aAAa,oBAAqB,UAK7G,IAAIO,iBAAkBZ,SAASC,cAAc,oBACzCY,iBAAmBb,SAASC,cAAc,qBAC1Ca,kBAAoBd,SAASC,cAAc,sBAE3Cc,MAAQf,SAASC,cAAc,gBAEhCW,mBAECA,gBAAgBR,iBAAiB,QAAS,WAAA,MAAMW,OAAMV,aAAa,mBAAoB,WAGvFQ,iBAAiBT,iBAAiB,QAAS,WAAA,MAAMW,OAAMV,aAAa,mBAAoB,UACxFS,kBAAkBV,iBAAiB,QAAS,WAAA,MAAMW,OAAMV,aAAa,mBAAoB,UAI7F,IAAIW,oBAAAA,GACAC,aACIjB,SAASC,cAAc,cACvBD,SAASC,cAAc,cACvBD,SAASC,cAAc,uBAE3BiB,kBAAoBlB,SAASC,cAAc,eAC3CkB,YAAcnB,SAASC,cAAc,OAEzCgB,aAAYG,QAAQ,SAAAC,GAChBA,EAAMjB,iBAAiB,QAAS,WAC5BY,eAAiBK,EAAMC,QAAQC,WAK/BC,kBAAkBR,gBAClBS,yBAAyBR,YAAaS,eAAeC,QAAQ,kBAAkBC,SAAU,EAEzFC,aAAaV,aAEsB,OAAhCA,YAAYG,QAAQQ,aAAoDC,KAAhCZ,YAAYG,QAAQQ,SAC3DE,UAAUd,kBAAV,aAA0CF,eAA1C,YACAiB,WAAW,WAAaC,YAAYf,cAAgB,OAEpDa,UAAUd,kBAAV,UAAuCF,eAAvC,YACAiB,WAAW,WAAaC,YAAYf,cAAgB,UAKhEgB,OAAOC,OAAS,WACZP,aAAaV,aAKVO,eAAeC,QAAQ,kBACtBX,eAAiBU,eAAeC,QAAQ,iBACxCF,yBAAyBR,YAAaS,eAAeC,QAAQ,kBAAkBC,SAAU,IAEzFF,eAAeW,QAAQ,gBAAiB,UACxCrB,eAAiBU,eAAeC,QAAQ,iBACxCF,yBAAyBR,YAAaS,eAAeC,QAAQ,kBAAkBC,SAAU,GAG1D,OAAhCT,YAAYG,QAAQQ,SACnBE,UAAUd,kBAAV,aAA0CF,eAA1C,YACAkB,YAAYf,eAEZa,UAAUd,kBAAV,UAAuCF,eAAvC,YACAkB,YAAYf,cAIpB,IAAMa,WAAY,SAACM,EAAIjB,GACnBiB,EAAGC,KAAOlB,GAGRa,YAAc,SAACI,GACjBA,EAAGhB,QAAQkB,SAAU,GAGnBX,aAAe,SAACS,GAClBA,EAAGhB,QAAQkB,SAAU,GAGnBhB,kBAAoB,SAAAR,GACtBU,eAAeW,QAAQ,gBAAiBrB,IAGtCS,yBAA2B,SAACgB,EAAQC,GAAT,MAAiCD,GAAOE,KACrE,SAAAC,GAAA,MAASA,GAAMtB,QAAQC,YAAcmB","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// Mobile Menu\nlet header = document.querySelector(\".willow-page-header\")\nlet open = document.querySelector(\".willow-page-header__content-open\")\nlet close = document.querySelector(\".willow-page-header__content-close\")\n\nif(open) {\n    open.addEventListener(\"click\", () => header.setAttribute(\"data-content-open\", \"true\"))\n    close.addEventListener(\"click\", () => header.setAttribute(\"data-content-open\", \"false\"))\n}\n\n// Dialog\n// declare dialog open, close and content\nlet openDialogButton = document.querySelector(\"#openDialogButton\")\nlet closeDialogButton = document.querySelector(\"#closeDialogButton\")\nlet dialog = document.querySelector(\"#dialog\")\n\nif(openDialogButton) {\n    // open the dialog content\n    openDialogButton.addEventListener(\"click\", () => dialog.setAttribute(\"data-dialog-close\", \"false\"))\n    \n    // close the dialog content\n    closeDialogButton.addEventListener(\"click\", () => dialog.setAttribute(\"data-dialog-close\", \"true\"))\n}\n\n// declare complex dialog open, close and content\nlet openComplexDialogButton = document.querySelector(\"#openComplexDialogButton\")\nlet closeComplexDialogButton = document.querySelector(\"#closeComplexDialogButton\")\nlet complexDialog = document.querySelector(\"#complexDialog\")\n\nif(openComplexDialogButton) {\n    // open the dialog content\n    openComplexDialogButton.addEventListener(\"click\", () => complexDialog.setAttribute(\"data-dialog-close\", \"false\"))\n    \n    // close the dialog content\n    closeComplexDialogButton.addEventListener(\"click\", () => complexDialog.setAttribute(\"data-dialog-close\", \"true\"))\n}\n    \n// Modal\n// declare modal open, close and content\nlet openModalButton = document.querySelector(\"#openModalButton\")\nlet closeModalButton = document.querySelector(\"#closeModalButton\")\nlet closeModalButton2 = document.querySelector(\"#closeModalButton2\")\n\nlet modal = document.querySelector(\".willow-modal\")\n\nif(openModalButton) {\n    // opens the modal content\n    openModalButton.addEventListener(\"click\", () => modal.setAttribute(\"data-modal-close\", \"false\"))\n    \n    // closes the modal content\n    closeModalButton.addEventListener(\"click\", () => modal.setAttribute(\"data-modal-close\", \"true\"))\n    closeModalButton2.addEventListener(\"click\", () => modal.setAttribute(\"data-modal-close\", \"true\"))\n}\n\n// Theme Swapping\nlet stylesheetName,\n    themeInputs = [\n        document.querySelector(\"#greyRadio\"), \n        document.querySelector(\"#unumRadio\"), \n        document.querySelector(\"#colonialLifeRadio\")\n    ],\n    stylesheetElement = document.querySelector(\"#stylesheet\"),\n    bodyElement = document.querySelector(\"body\")\n\nthemeInputs.forEach(theme => { \n    theme.addEventListener(\"click\", function() {\n        stylesheetName = theme.dataset.stylesheet\n    \n        // for local session\n        // setLocalTheme(stylesheetName)\n    \n        setThemeInSession(stylesheetName)\n        matchSessionThemeToRadio(themeInputs, sessionStorage.getItem(\"selectedTheme\")).checked = true\n\n        startLoading(bodyElement)\n\n        if(bodyElement.dataset.subpage !== null && bodyElement.dataset.subpage !== undefined) {\n            swapTheme(stylesheetElement, `../styles/${stylesheetName}.min.css`)\n            setTimeout(function() { stopLoading(bodyElement) }, 500)\n        } else {\n            swapTheme(stylesheetElement, `styles/${stylesheetName}.min.css`)\n            setTimeout(function() { stopLoading(bodyElement) }, 500)\n        }\n    })\n})\n\nwindow.onload = () => {\n    startLoading(bodyElement)\n\n    // for local session\n    // stylesheetName = localStorage.getItem(\"selectedTheme\")\n\n    if(sessionStorage.getItem(\"selectedTheme\")) {\n        stylesheetName = sessionStorage.getItem(\"selectedTheme\")\n        matchSessionThemeToRadio(themeInputs, sessionStorage.getItem(\"selectedTheme\")).checked = true\n    } else {\n        sessionStorage.setItem(\"selectedTheme\", \"styles\")\n        stylesheetName = sessionStorage.getItem(\"selectedTheme\")\n        matchSessionThemeToRadio(themeInputs, sessionStorage.getItem(\"selectedTheme\")).checked = true\n    }\n        \n    if(bodyElement.dataset.subpage !== null) {\n        swapTheme(stylesheetElement, `../styles/${stylesheetName}.min.css`)\n        stopLoading(bodyElement)\n    } else {\n        swapTheme(stylesheetElement, `styles/${stylesheetName}.min.css`)\n        stopLoading(bodyElement)\n    }\n}\n\nconst swapTheme = (el, theme) => {\n    el.href = theme\n}\n\nconst stopLoading = (el) => {\n    el.dataset.loading = false\n}\n\nconst startLoading = (el) => {\n    el.dataset.loading = true;\n}\n\nconst setThemeInSession = stylesheetName => {\n    sessionStorage.setItem(\"selectedTheme\", stylesheetName)\n}\n\nconst matchSessionThemeToRadio = (inputs, sessionStorageTheme) => inputs.find(\n    input => input.dataset.stylesheet == sessionStorageTheme\n)\n\n// Local Storage Setting\n//probably want session storage over local storage - so if a user closes their browser and reopens the demo site they will see the greyscale/starting theme first\n// const setLocalTheme = stylesheetName => {\n//     localStorage.setItem(\"selectedTheme\", stylesheetName)\n// }\n\n// const matchLocalToRadio = (inputs, localstorageTheme) => inputs.find(\n//     input => input.dataset.stylesheet == localstorageTheme\n// )\n\n// matchLocalToRadio(themeInputs, localStorage.getItem(\"selectedTheme\")).checked = true\n"]}