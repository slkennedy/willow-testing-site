{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/dialog.js","scripts/mobileMenu.js","scripts/modal.js","scripts/site.js","scripts/themeSwap.js"],"names":["openDialogButton","document","querySelector","closeDialogButton","dialog","addEventListener","setAttribute","openComplexDialogButton","closeComplexDialogButton","complexDialog","header","open","close","openModalButton","closeModalButton","closeModalButton2","modal","require","stylesheetName","themeInputs","stylesheetElement","bodyElement","section","sectionControl","swapTheme","el","theme","href","setThemeInSession","sessionStorage","setItem","matchSessionThemeToRadio","inputs","sessionStorageTheme","find","input","dataset","stylesheet","setControlStateInSession","state","setControlInnerHTML","text","innerHTML","forEach","getItem","checked","window","onload","isOpen","console","log"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// Dialog\n// declare dialog open, close and content\nlet openDialogButton = document.querySelector(\"#openDialogButton\")\nlet closeDialogButton = document.querySelector(\"#closeDialogButton\")\nlet dialog = document.querySelector(\"#dialog\")\n\nif(openDialogButton) {\n    // open the dialog content\n    openDialogButton.addEventListener(\"click\", () => dialog.setAttribute(\"data-dialog-close\", \"false\"))\n    \n    // close the dialog content\n    closeDialogButton.addEventListener(\"click\", () => dialog.setAttribute(\"data-dialog-close\", \"true\"))\n}\n\n// declare complex dialog open, close and content\nlet openComplexDialogButton = document.querySelector(\"#openComplexDialogButton\")\nlet closeComplexDialogButton = document.querySelector(\"#closeComplexDialogButton\")\nlet complexDialog = document.querySelector(\"#complexDialog\")\n\nif(openComplexDialogButton) {\n    // open the dialog content\n    openComplexDialogButton.addEventListener(\"click\", () => complexDialog.setAttribute(\"data-dialog-close\", \"false\"))\n    \n    // close the dialog content\n    closeComplexDialogButton.addEventListener(\"click\", () => complexDialog.setAttribute(\"data-dialog-close\", \"true\"))\n}\n","// Mobile Menu\nlet header = document.querySelector(\".willow-page-header\")\nlet open = document.querySelector(\".willow-page-header__content-open\")\nlet close = document.querySelector(\".willow-page-header__content-close\")\n\nif(open) {\n    open.addEventListener(\"click\", () => header.setAttribute(\"data-content-open\", \"true\"))\n    close.addEventListener(\"click\", () => header.setAttribute(\"data-content-open\", \"false\"))\n}\n","// Modal\n// declare modal open, close and content\nlet openModalButton = document.querySelector(\"#openModalButton\")\nlet closeModalButton = document.querySelector(\"#closeModalButton\")\nlet closeModalButton2 = document.querySelector(\"#closeModalButton2\")\n\nlet modal = document.querySelector(\".willow-modal\")\n\nif(openModalButton) {\n    // opens the modal content\n    openModalButton.addEventListener(\"click\", () => modal.setAttribute(\"data-modal-close\", \"false\"))\n    \n    // closes the modal content\n    closeModalButton.addEventListener(\"click\", () => modal.setAttribute(\"data-modal-close\", \"true\"))\n    closeModalButton2.addEventListener(\"click\", () => modal.setAttribute(\"data-modal-close\", \"true\"))\n}\n","import \"./mobileMenu.js\";\nimport \"./dialog.js\";\nimport \"./modal.js\";\nimport \"./themeSwap.js\";\n","// Theme Swapping\nlet stylesheetName,\n    themeInputs = [\n        document.querySelector(\"#greyRadio\"), \n        document.querySelector(\"#unumRadio\"), \n        document.querySelector(\"#colonialLifeRadio\")\n    ],\n    stylesheetElement = document.querySelector(\"#stylesheet\"),\n    bodyElement = document.querySelector(\"body\"),\n    section = document.querySelector(\"#section\"),\n    sectionControl = document.querySelector(\"#sectionControl\");\n\n\n// Functions\nconst swapTheme = (el, theme) => {\n    el.href = theme\n}\n\nconst setThemeInSession = stylesheetName => {\n    sessionStorage.setItem(\"selectedTheme\", stylesheetName)\n}\n\nconst matchSessionThemeToRadio = (inputs, sessionStorageTheme) => inputs.find(\n    input => input.dataset.stylesheet == sessionStorageTheme\n)\n\nconst setControlStateInSession = state => {\n    sessionStorage.setItem(\"controlIsOpen\", state)\n}\n\nconst setControlInnerHTML = text => {\n    sectionControl.innerHTML = text\n}\n\n// Actions\n// click events for radio buttons to change themes\nthemeInputs.forEach(theme => {\n    theme.addEventListener(\"click\", function() {\n        stylesheetName = theme.dataset.stylesheet\n    \n        // for local session\n        // setLocalTheme(stylesheetName)\n    \n        setThemeInSession(stylesheetName)\n        matchSessionThemeToRadio(themeInputs, sessionStorage.getItem(\"selectedTheme\")).checked = true\n\n        swapTheme(stylesheetElement, `/willow-testing-site/styles/${stylesheetName}.min.css`)\n    })\n})\n\n// for initial load of site or when navigating between pages\nwindow.onload = () => {\n    // for local session\n    // stylesheetName = localStorage.getItem(\"selectedTheme\")\n\n    if(sessionStorage.getItem(\"selectedTheme\")) {\n        stylesheetName = sessionStorage.getItem(\"selectedTheme\")\n        matchSessionThemeToRadio(themeInputs, sessionStorage.getItem(\"selectedTheme\")).checked = true\n    } else {\n        sessionStorage.setItem(\"selectedTheme\", \"styles\")\n        stylesheetName = sessionStorage.getItem(\"selectedTheme\")\n        matchSessionThemeToRadio(themeInputs, sessionStorage.getItem(\"selectedTheme\")).checked = true\n    }\n        \n    swapTheme(stylesheetElement, `/willow-testing-site/styles/${stylesheetName}.min.css`)\n\n    // set session storage for the theme controls being open or closed\n    if(!sessionStorage.getItem(\"controlIsOpen\")) {\n        setControlStateInSession(false);\n    }\n    \n    if(sessionStorage.getItem(\"controlIsOpen\") == \"false\") {\n        section.dataset.isOpen = false\n        setControlInnerHTML(\"Show Theme Controls\")\n    } else {\n        section.dataset.isOpen = true\n        setControlInnerHTML(\"Hide Theme Controls\")\n    }\n}\nconsole.log(sessionStorage)\n// Local Storage Setting\n// using sessionStorage instead for now\n// leaving localStorage code here in case we decide to switch back\n// const setLocalTheme = stylesheetName => {\n//     localStorage.setItem(\"selectedTheme\", stylesheetName)\n// }\n\n// const matchLocalToRadio = (inputs, localstorageTheme) => inputs.find(\n//     input => input.dataset.stylesheet == localstorageTheme\n// )\n\n// matchLocalToRadio(themeInputs, localStorage.getItem(\"selectedTheme\")).checked = true\n\n\ndocument.querySelector(\"#sectionControl\").addEventListener(\"click\", () => {    \n    if(sessionStorage.getItem(\"controlIsOpen\") == \"true\") {\n        setControlInnerHTML(\"Show Theme Controls\")\n        setControlStateInSession(false)\n        section.dataset.isOpen = sessionStorage.getItem(\"controlIsOpen\")\n    } else {\n        setControlInnerHTML(\"Hide Theme Controls\")\n        setControlStateInSession(true)\n        section.dataset.isOpen = sessionStorage.getItem(\"controlIsOpen\")\n    }\n})\n"]}